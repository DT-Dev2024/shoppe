generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model productcategories {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  created_at DateTime?  @default(now()) @db.Date
  deleted_at DateTime?  @updatedAt @db.Date
  image      String
  name       String
  updated_at DateTime?  @updatedAt @db.Date
  products   products[]
}

model shop {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  products      products[]
  followers     Int
  followings    Int
  reply         Int
  feedback      Float
  take_part_int String
  created_at    DateTime?  @default(now()) @db.Date
  updated_at    DateTime?  @updatedAt @db.Date
  deleted_at    DateTime?  @updatedAt @db.Date
}

model voncher {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  type            voncher_type
  code            String
  discount        Float
  discount_type   discount_type
  minium_price    Float
  maxium_discount Float?
  expire          DateTime?

  created_at DateTime? @default(now()) @db.Date
  updated_at DateTime? @updatedAt @db.Date
  deleted_at DateTime? @updatedAt @db.Date

  order_discount   order_discount? @relation(fields: [order_discountId], references: [id])
  order_discountId String?         @db.ObjectId
}

enum voncher_type {
  SHOP
  USER
}

enum discount_type {
  PERCENTAGE
  FIXED
}

model products {
  id              String             @id @default(auto()) @map("_id") @db.ObjectId
  category        productcategories? @relation(fields: [category_id], references: [id])
  category_id     String?            @db.ObjectId
  created_at      DateTime?          @default(now()) @db.Date
  image           String
  detailImage     String[]
  name            String
  description     String
  sale_price      Float
  updated_at      DateTime?          @updatedAt @db.Date
  product_types   products_type[]
  shop            shop?              @relation(fields: [shopId], references: [id])
  shopId          String?            @db.ObjectId
  product_feeback product_feeback?
  order_details   order_details[]
}

model product_feeback {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  star       Float
  comment    Int
  sold       Int
  product    products? @relation(fields: [productId], references: [id])
  productId  String?   @unique @db.ObjectId
  created_at DateTime? @default(now()) @db.Date
  deleted_at DateTime? @updatedAt @db.Date
  updated_at DateTime? @updatedAt @db.Date
}

model products_type {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  price      Float
  store      Int       @default(1000)
  created_at DateTime? @default(now()) @db.Date
  updated_at DateTime? @updatedAt @db.Date
  deleted_at DateTime? @updatedAt @db.Date

  products   products? @relation(fields: [productsId], references: [id])
  productsId String?   @db.ObjectId
}

model users {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  phone      String    @unique @db.String
  name       String?
  email      String?
  password   String?
  address    String?
  created_at DateTime? @default(now()) @db.Date
  updated_at DateTime? @updatedAt @db.Date
  roles      roles     @default(USER)
  orders     orders?
}

model ui_home_data_source {
  id                                  String    @id @default(auto()) @map("_id") @db.ObjectId
  headerSearchHistoryListInfo         String[]
  headerSearchHistoryKeywordsListInfo String[]
  bannerListInfo                      String[]
  created_at                          DateTime? @default(now()) @db.Date
  updated_at                          DateTime? @updatedAt @db.Date
}

model orders {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  user              users?          @relation(fields: [userId], references: [id])
  userId            String?         @unique @db.ObjectId
  status            order_status    @default(WAITING)
  order_discount_id order_discount?
  total_price       Float
  created_at        DateTime?       @default(now()) @db.Date
  updated_at        DateTime?       @updatedAt @db.Date
  deleted_at        DateTime?       @updatedAt @db.Date
  order_details     order_details[]
}

model order_discount {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  voncher        voncher[]
  order          orders    @relation(fields: [orderId], references: [id])
  orderId        String    @unique @db.ObjectId
  total_discount Float
  created_at     DateTime? @default(now()) @db.Date
  updated_at     DateTime? @updatedAt @db.Date
  deleted_at     DateTime? @updatedAt @db.Date
}

model order_details {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  order      orders    @relation(fields: [orderId], references: [id])
  orderId    String    @unique @db.ObjectId
  product    products? @relation(fields: [productId], references: [id])
  productId  String?   @db.ObjectId
  quantity   Int
  created_at DateTime? @default(now()) @db.Date
  updated_at DateTime? @updatedAt @db.Date
}

enum order_status {
  WAITING
  DELIVERING
  DELIVERED
  CANCELED
  RETURN
}

enum roles {
  USER
  ADMIN
}
